{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar getOwnPropertySymbols = require( '@stdlib/utils-property-symbols' );\nvar getPrototypeOf = require( '@stdlib/utils-get-prototype-of' );\nvar isNonEnumerableProperty = require( '@stdlib/assert-is-nonenumerable-property' );\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar Object = require( '@stdlib/object-ctor' );\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited non-enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited non-enumerable symbol properties\n*\n* @example\n* var symbols = nonEnumerablePropertySymbolsIn( {} );\n*/\nfunction nonEnumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting all non-enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false &&\n\t\t\t\tisNonEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nmodule.exports = nonEnumerablePropertySymbolsIn;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return an array of an object's own and inherited non-enumerable symbol properties.\n*\n* @module @stdlib/utils-nonenumerable-property-symbols-in\n*\n* @example\n* var nonEnumerablePropertySymbolsIn = require( '@stdlib/utils-nonenumerable-property-symbols-in' );\n*\n* var symbols = nonEnumerablePropertySymbolsIn( {} );\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAwB,QAAS,gCAAiC,EAClEC,EAAiB,QAAS,gCAAiC,EAC3DC,EAA0B,QAAS,0CAA2C,EAC9EC,EAAa,QAAS,iCAAkC,EACxDC,EAAS,QAAS,qBAAsB,EAc5C,SAASC,EAAgCC,EAAQ,CAChD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKN,GAAU,KACd,MAAO,CAAC,EAGTG,EAAML,EAAQE,CAAM,EAGpBC,EAAU,CAAC,EACXC,EAAQ,CAAC,EACT,EAAG,CAEF,IADAE,EAAMV,EAAuBS,CAAI,EAC3BG,EAAI,EAAGA,EAAIF,EAAI,OAAQE,IAC5BD,EAAID,EAAKE,CAAE,EAEVT,EAAYK,EAAOG,CAAE,IAAM,IAC3BT,EAAyBO,EAAKE,CAAE,GAEhCJ,EAAQ,KAAMI,CAAE,EAEjBH,EAAOG,CAAE,EAAI,GAEdF,EAAMR,EAAgBQ,CAAI,CAC3B,OAAUA,GAEV,OAAOF,CACR,CAKAR,EAAO,QAAUM,IC7CjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "getOwnPropertySymbols", "getPrototypeOf", "isNonEnumerableProperty", "hasOwnProp", "Object", "nonEnumerablePropertySymbolsIn", "value", "symbols", "cache", "obj", "tmp", "k", "i", "main"]
}
